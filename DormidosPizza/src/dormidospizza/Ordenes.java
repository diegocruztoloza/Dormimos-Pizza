/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dormidospizza;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Scanner;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Diego
 */
public class Ordenes extends javax.swing.JInternalFrame {

    /**
     * Creates new form Ordenes
     */
    public Ordenes() {
        initComponents();
        
        jCBoxSucursal.addItem("Guatemala");
	jCBoxSucursal.addItem("El Progreso");
	jCBoxSucursal.addItem("Jalapa");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDesktop = new javax.swing.JDesktopPane();
        jLabel1 = new javax.swing.JLabel();
        jCBoxSucursal = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTAreaDescripcion = new javax.swing.JTextArea();
        jTFieldPrecio = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        Tabla = new javax.swing.JTable();
        jButtonOrdenar = new javax.swing.JButton();
        jCBoxPizza = new javax.swing.JComboBox<>();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Creación de Ordenes");

        jDesktop.setBackground(new java.awt.Color(255, 255, 255));
        jDesktop.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Sucursal:");
        jDesktop.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, -1));

        jCBoxSucursal.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Elegir Sucursal" }));
        jCBoxSucursal.setToolTipText("");
        jCBoxSucursal.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCBoxSucursalItemStateChanged(evt);
            }
        });
        jCBoxSucursal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCBoxSucursalMouseClicked(evt);
            }
        });
        jCBoxSucursal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBoxSucursalActionPerformed(evt);
            }
        });
        jCBoxSucursal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jCBoxSucursalKeyPressed(evt);
            }
        });
        jDesktop.add(jCBoxSucursal, new org.netbeans.lib.awtextra.AbsoluteConstraints(72, 37, 121, -1));

        jLabel2.setText("Pizza:");
        jDesktop.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(241, 40, -1, -1));

        jLabel3.setText("Descripción:");
        jDesktop.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 104, -1, -1));

        jTAreaDescripcion.setColumns(20);
        jTAreaDescripcion.setRows(5);
        jScrollPane1.setViewportView(jTAreaDescripcion);

        jDesktop.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(72, 124, 353, 114));

        jTFieldPrecio.setEditable(false);
        jDesktop.add(jTFieldPrecio, new org.netbeans.lib.awtextra.AbsoluteConstraints(431, 154, 113, -1));

        jLabel4.setText("Precio");
        jDesktop.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(431, 129, -1, -1));

        Tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No.", "Pizza", "Descripción", "Sucursal"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(Tabla);
        if (Tabla.getColumnModel().getColumnCount() > 0) {
            Tabla.getColumnModel().getColumn(0).setResizable(false);
            Tabla.getColumnModel().getColumn(1).setResizable(false);
            Tabla.getColumnModel().getColumn(2).setResizable(false);
            Tabla.getColumnModel().getColumn(3).setResizable(false);
        }

        jDesktop.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 256, 540, 130));

        jButtonOrdenar.setText("ORDENAR");
        jButtonOrdenar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOrdenarActionPerformed(evt);
            }
        });
        jDesktop.add(jButtonOrdenar, new org.netbeans.lib.awtextra.AbsoluteConstraints(431, 215, 113, -1));

        jCBoxPizza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBoxPizzaActionPerformed(evt);
            }
        });
        jDesktop.add(jCBoxPizza, new org.netbeans.lib.awtextra.AbsoluteConstraints(273, 37, 125, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktop, javax.swing.GroupLayout.DEFAULT_SIZE, 572, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jDesktop, javax.swing.GroupLayout.DEFAULT_SIZE, 414, Short.MAX_VALUE)
                .addGap(4, 4, 4))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCBoxSucursalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBoxSucursalActionPerformed
        String sucursal = (String)jCBoxSucursal.getSelectedItem();
        
        
        java.util.List<String> lista = new ArrayList<>();
        if(sucursal.contentEquals("Guatemala")){
            jCBoxPizza.removeAllItems();
            File archivo = null;
            FileReader Fr = null;
            BufferedReader br = null;
            
            try {
            archivo = new File("guatemala.txt");
            Fr = new FileReader(archivo.toString());
            br = new BufferedReader(Fr);
            String linea;
            
            while (((linea = br.readLine()) != null)) {
                lista.add(linea);
            }
            
            } catch (IOException e) {
                System.out.println(e);
            }
            
        try {
            archivo = new File("guatemala.txt");
            Fr = new FileReader(archivo.toString());
            br = new BufferedReader(Fr);
            String linea;
            String delimiter = "-"; 
            int num = lista.size();
            String matriz[][] = new String[num][4];

            int numlinea=0;

            while (((linea = br.readLine()) != null)) {
                String a[]=linea.split(delimiter);
                
                for (int l = 0; l < a.length; l++) {
                    matriz[numlinea][l] = a[l];
                }
                numlinea++;
            }
               for (int filas = 0; filas < matriz.length; filas++) {
                    for (int colum = 0; colum < matriz[filas].length; colum++) {
                    }
                }
                for (int i = 0; i < num; i++) {
                            jCBoxPizza.addItem(matriz[i][0]);
                }
        } catch (IOException e) {
            System.out.println(e);
        }
        
        }
        
        if(sucursal.contentEquals("El Progreso")){
            jCBoxPizza.removeAllItems();
            File archivo = null;
            FileReader Fr = null;
            BufferedReader br = null;
            
            
             try {
            archivo = new File("progreso.txt");
            Fr = new FileReader(archivo.toString());
            br = new BufferedReader(Fr);
            String linea;
            
            while (((linea = br.readLine()) != null)) {
                lista.add(linea);
            }
            
            } catch (IOException e) {
                System.out.println(e);
            }
            
        try {
            archivo = new File("progreso.txt");
            Fr = new FileReader(archivo.toString());
            br = new BufferedReader(Fr);
            String linea;
            String delimiter = "-"; 
            int num = lista.size();
            String matriz[][] = new String[num][4];

            int numlinea=0;

            while (((linea = br.readLine()) != null)) {
                String a[]=linea.split(delimiter);
                
                for (int l = 0; l < a.length; l++) {
                    matriz[numlinea][l] = a[l];
                }
                numlinea++;
            }
               for (int filas = 0; filas < matriz.length; filas++) {
                    for (int colum = 0; colum < matriz[filas].length; colum++) {
                    }
                }
                for (int i = 0; i < num; i++) {
                            jCBoxPizza.addItem(matriz[i][0]);
                }
        } catch (IOException e) {
            System.out.println(e);
        }
        }
        
        
        if(sucursal.contentEquals("Jalapa")){
            jCBoxPizza.removeAllItems();
            File archivo = null;
            FileReader Fr = null;
            BufferedReader br = null;
            
            
             try {
            archivo = new File("jalapa.txt");
            Fr = new FileReader(archivo.toString());
            br = new BufferedReader(Fr);
            String linea;
            
            while (((linea = br.readLine()) != null)) {
                lista.add(linea);
            }
            
            } catch (IOException e) {
                System.out.println(e);
            }
            
        try {
            archivo = new File("jalapa.txt");
            Fr = new FileReader(archivo.toString());
            br = new BufferedReader(Fr);
            String linea;
            String delimiter = "-"; 
            int num = lista.size();
            String matriz[][] = new String[num][4];

            int numlinea=0;

            while (((linea = br.readLine()) != null)) {
                String a[]=linea.split(delimiter);
                
                for (int l = 0; l < a.length; l++) {
                    matriz[numlinea][l] = a[l];
                }
                numlinea++;
            }
               for (int filas = 0; filas < matriz.length; filas++) {
                    for (int colum = 0; colum < matriz[filas].length; colum++) {
                    }
                }
                for (int i = 0; i < num; i++) {
                            jCBoxPizza.addItem(matriz[i][0]);
                }
        } catch (IOException e) {
            System.out.println(e);
        }
        }
        
        if(sucursal.contentEquals("Elegir Sucursal")){
            jCBoxPizza.removeAllItems();
        }
        
    }//GEN-LAST:event_jCBoxSucursalActionPerformed

    private void jCBoxSucursalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCBoxSucursalMouseClicked
        
    }//GEN-LAST:event_jCBoxSucursalMouseClicked
private int cont = 0 ;

    private void jButtonOrdenarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOrdenarActionPerformed
        cont++;
        String sucursal1 = (String)jCBoxSucursal.getSelectedItem();
        ///////////////////
        if(sucursal1.contentEquals("Guatemala")){
        java.util.List<String> lista = new ArrayList<>();
            File archivo = null;
            FileReader Fr = null;
            BufferedReader br = null;
            try {
            archivo = new File("ordenesguatemala.txt");
            Fr = new FileReader(archivo.toString());
            br = new BufferedReader(Fr);
            String linea;
            while (((linea = br.readLine()) != null)) {
                lista.add(linea);
            }
            } catch (IOException e) {
                System.out.println(e);
            }
            
        try {
            archivo = new File("ordenesguatemala.txt");
            Fr = new FileReader(archivo.toString());
            br = new BufferedReader(Fr);
            String linea;
            String delimiter = "-"; 
            int num = lista.size();
            String matriz[][] = new String[num][4];

            int numlinea=0;

            while (((linea = br.readLine()) != null)) {
                String a[]=linea.split(delimiter);
                
                for (int l = 0; l < a.length; l++) {
                    matriz[numlinea][l] = a[l];
                }
                numlinea++;
            }
               for (int filas = 0; filas < matriz.length; filas++) {
                    for (int colum = 0; colum < matriz[filas].length; colum++) {
                    }
                }
                cont = num + 1;
        } catch (IOException e) {
            System.out.println(e);
        }
        
        String sucursal = (String)jCBoxSucursal.getSelectedItem();
        String pizza = (String)jCBoxPizza.getSelectedItem();
        String descripcion = jTAreaDescripcion.getText();
        try{
        DefaultTableModel model = (DefaultTableModel)Tabla.getModel();
        model.addRow(new Object[]{cont,pizza,descripcion,sucursal});
                FileWriter Writer = new FileWriter("ordenesguatemala.txt", true);
                Writer.write(""+cont+"-"+pizza+"-"+descripcion+"-"+sucursal);
                Writer.write(System.getProperty("line.separator"));
                Writer.close();
                new Admin().setVisible(true);
        }catch (Exception e){
            JOptionPane.showMessageDialog(null,"Error");
        }
        }
        
        if(sucursal1.contentEquals("El Progreso")){
            java.util.List<String> lista = new ArrayList<>();
            File archivo = null;
            FileReader Fr = null;
            BufferedReader br = null;
            try {
            archivo = new File("ordenesprogreso.txt");
            Fr = new FileReader(archivo.toString());
            br = new BufferedReader(Fr);
            String linea;
            while (((linea = br.readLine()) != null)) {
                lista.add(linea);
            }
            } catch (IOException e) {
                System.out.println(e);
            }
            
        try {
            archivo = new File("ordenesprogreso.txt");
            Fr = new FileReader(archivo.toString());
            br = new BufferedReader(Fr);
            String linea;
            String delimiter = "-"; 
            int num = lista.size();
            String matriz[][] = new String[num][4];

            int numlinea=0;

            while (((linea = br.readLine()) != null)) {
                String a[]=linea.split(delimiter);
                
                for (int l = 0; l < a.length; l++) {
                    matriz[numlinea][l] = a[l];
                }
                numlinea++;
            }
               for (int filas = 0; filas < matriz.length; filas++) {
                    for (int colum = 0; colum < matriz[filas].length; colum++) {
                    }
                }
                cont = num + 1;
        } catch (IOException e) {
            System.out.println(e);
        }
        
        String sucursal = (String)jCBoxSucursal.getSelectedItem();
        String pizza = (String)jCBoxPizza.getSelectedItem();
        String descripcion = jTAreaDescripcion.getText();
        try{
        DefaultTableModel model = (DefaultTableModel)Tabla.getModel();
        model.addRow(new Object[]{cont,pizza,descripcion,sucursal});
                FileWriter Writer = new FileWriter("ordenesprogreso.txt", true);
                Writer.write(""+cont+"-"+pizza+"-"+descripcion+"-"+sucursal);
                Writer.write(System.getProperty("line.separator"));
                Writer.close();
                new Admin().setVisible(true);
        }catch (Exception e){
            JOptionPane.showMessageDialog(null,"Error");
        }
        }
        
        if(sucursal1.contentEquals("Jalapa")){
            java.util.List<String> lista = new ArrayList<>();
            File archivo = null;
            FileReader Fr = null;
            BufferedReader br = null;
            try {
            archivo = new File("ordenesjalapa.txt");
            Fr = new FileReader(archivo.toString());
            br = new BufferedReader(Fr);
            String linea;
            while (((linea = br.readLine()) != null)) {
                lista.add(linea);
            }
            } catch (IOException e) {
                System.out.println(e);
            }
            
        try {
            archivo = new File("ordenesjalapa.txt");
            Fr = new FileReader(archivo.toString());
            br = new BufferedReader(Fr);
            String linea;
            String delimiter = "-"; 
            int num = lista.size();
            String matriz[][] = new String[num][4];

            int numlinea=0;

            while (((linea = br.readLine()) != null)) {
                String a[]=linea.split(delimiter);
                
                for (int l = 0; l < a.length; l++) {
                    matriz[numlinea][l] = a[l];
                }
                numlinea++;
            }
               for (int filas = 0; filas < matriz.length; filas++) {
                    for (int colum = 0; colum < matriz[filas].length; colum++) {
                    }
                }
                cont = num + 1;
        } catch (IOException e) {
            System.out.println(e);
        }
        
        String sucursal = (String)jCBoxSucursal.getSelectedItem();
        String pizza = (String)jCBoxPizza.getSelectedItem();
        String descripcion = jTAreaDescripcion.getText();
        try{
        DefaultTableModel model = (DefaultTableModel)Tabla.getModel();
        model.addRow(new Object[]{cont,pizza,descripcion,sucursal});
                FileWriter Writer = new FileWriter("ordenesjalapa.txt", true);
                Writer.write(""+cont+"-"+pizza+"-"+descripcion+"-"+sucursal);
                Writer.write(System.getProperty("line.separator"));
                Writer.close();
                new Admin().setVisible(true);
        }catch (Exception e){
            JOptionPane.showMessageDialog(null,"Error");
        }
        }
        
    }//GEN-LAST:event_jButtonOrdenarActionPerformed

    private void jCBoxSucursalKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jCBoxSucursalKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCBoxSucursalKeyPressed

    private void jCBoxSucursalItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCBoxSucursalItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jCBoxSucursalItemStateChanged

    private void jCBoxPizzaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBoxPizzaActionPerformed
        String pizza = (String)jCBoxPizza.getSelectedItem();
        String sucursal = (String)jCBoxSucursal.getSelectedItem();
        
        
        if(sucursal.contentEquals("Guatemala")){
        Scanner entrada = null;
        String linea;
        String filePath = "guatemala.txt";
        File file = new File(filePath);
        
        try {
            entrada = new Scanner(file);
            FileReader fr = new FileReader(file);
            BufferedReader br = new BufferedReader(fr);
            
            while (entrada.hasNext()) { 
                linea = entrada.nextLine();  
                if (linea.contains(pizza)) {        
                    String pelicula = linea;
                    String separador = "-";
                    String[] imprimir = pelicula.split(separador);
                    for (int i = 1; i<imprimir.length; i++) {
                        String[] columna = imprimir[i].split("-");
                    }
                    jTAreaDescripcion.setText(imprimir[2]);
                    jTFieldPrecio.setText(imprimir[1]);
                }
            }
        } catch (Exception e) {
            System.out.println(e.toString());
        } 
        }
        
        
        if(sucursal.contentEquals("El Progreso")){
            Scanner entrada = null;
        String linea;
        String filePath = "progreso.txt";
        File file = new File(filePath);
        
        try {
            entrada = new Scanner(file);
            
            FileReader fr = new FileReader(file);
            BufferedReader br = new BufferedReader(fr);
            
            while (entrada.hasNext()) { 
                linea = entrada.nextLine();  
                if (linea.contains(pizza)) {        
                    String pelicula = linea;
                    String separador = "-";
                    String[] imprimir = pelicula.split(separador);
                    for (int i = 1; i<imprimir.length; i++) {
                        System.out.println(imprimir[i]);
                        String[] columna = imprimir[i].split("-");
                    }
                    jTAreaDescripcion.setText(imprimir[2]);
                    jTFieldPrecio.setText(imprimir[1]);
                }
            }
        } catch (Exception e) {
            System.out.println(e.toString());
        } 
        }
        
        if(sucursal.contentEquals("Jalapa")){
            Scanner entrada = null;
        String linea;
        String filePath = "jalapa.txt";
        File file = new File(filePath);
        
        try {
            entrada = new Scanner(file);
            
            FileReader fr = new FileReader(file);
            BufferedReader br = new BufferedReader(fr);
            
            while (entrada.hasNext()) { 
                linea = entrada.nextLine();  
                if (linea.contains(pizza)) {        
                    String pelicula = linea;
                    String separador = "-";
                    String[] imprimir = pelicula.split(separador);
                    for (int i = 1; i<imprimir.length; i++) {
                        System.out.println(imprimir[i]);
                        String[] columna = imprimir[i].split("-");
                    }
                    jTAreaDescripcion.setText(imprimir[2]);
                    jTFieldPrecio.setText(imprimir[1]);
                }
            }
        } catch (Exception e) {
            System.out.println(e.toString());
        } finally {
            if (entrada != null) {
                entrada.close();
            }
        }
        }
    
    }//GEN-LAST:event_jCBoxPizzaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Tabla;
    private javax.swing.JButton jButtonOrdenar;
    private javax.swing.JComboBox<String> jCBoxPizza;
    private javax.swing.JComboBox<String> jCBoxSucursal;
    private javax.swing.JDesktopPane jDesktop;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTAreaDescripcion;
    private javax.swing.JTextField jTFieldPrecio;
    // End of variables declaration//GEN-END:variables
}
